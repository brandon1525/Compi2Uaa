PROGRAM program 1 1
LBRACE { 1 8
INT int 2 2
ID x 2 6
COMMA , 2 7
ID y 2 8
COMMA , 2 9
ID z 2 10
SEMICOLON ; 2 11
FLOAT float 3 2
ID a 3 8
COMMA , 3 9
ID b 3 11
COMMA , 3 12
ID c 3 14
SEMICOLON ; 3 15
INT int 4 2
ID w 4 6
SEMICOLON ; 4 7
BOOL bool 5 2
ID xx 5 7
SEMICOLON ; 5 9
ID x 6 2
ASSIGN := 6 3
NUM_INT 23 6 5
SEMICOLON ; 6 7
ID y 7 2
ASSIGN := 7 3
NUM_INT 2 7 5
PLUS + 7 6
NUM_INT 3 7 7
MINUS - 7 8
NUM_INT 1 7 9
SEMICOLON ; 7 10
ID z 8 2
ASSIGN := 8 3
ID y 8 5
PLUS + 8 6
NUM_INT 7 8 7
SEMICOLON ; 8 8
ID x 9 2
ASSIGN := 9 3
LPARENT ( 9 5
NUM_INT 5 9 6
MINUS - 9 7
NUM_INT 3 9 8
RPARENT ) 9 9
MULTI * 9 10
LPARENT ( 9 11
NUM_INT 8 9 12
DIV / 9 13
NUM_INT 2 9 14
RPARENT ) 9 15
SEMICOLON ; 9 16
ID y 10 2
ASSIGN := 10 3
NUM_INT 5 10 5
PLUS + 10 6
NUM_INT 3 10 7
MINUS - 10 8
NUM_INT 2 10 9
MULTI * 10 10
NUM_INT 4 10 11
DIV / 10 12
NUM_INT 7 10 13
MINUS - 10 14
NUM_INT 9 10 15
SEMICOLON ; 10 16
ID z 11 2
ASSIGN := 11 3
NUM_INT 8 11 5
DIV / 11 6
NUM_INT 2 11 7
PLUS + 11 8
NUM_INT 15 11 9
MULTI * 11 11
NUM_INT 4 11 12
SEMICOLON ; 11 13
ID y 12 2
ASSIGN := 12 3
NUM_FLOAT 14.54 12 5
SEMICOLON ; 12 10
ID y 13 2
ASSIGN := 13 3
NUM_INT 1 13 5
SEMICOLON ; 13 6
ID xx 14 2
ASSIGN := 14 4
ID y 14 6
SEMICOLON ; 14 7
ID a 15 2
ASSIGN := 15 3
NUM_FLOAT 24.0 15 5
PLUS + 15 9
NUM_INT 4 15 10
MINUS - 15 11
NUM_INT 1 15 12
MULTI * 15 13
NUM_INT 3 15 14
DIV / 15 15
NUM_INT 2 15 16
PLUS + 15 17
NUM_INT 34 15 18
MINUS - 15 20
NUM_INT 1 15 21
SEMICOLON ; 15 22
ID a 16 2
INC ++ 16 3
SEMICOLON ; 16 5
INC ++ 17 2
ID x 17 4
SEMICOLON ; 17 5
DEC -- 18 2
ID x 18 4
SEMICOLON ; 18 5
ID z 19 2
ASSIGN := 19 3
ID x 19 5
PLUS + 19 7
ID y 19 9
SEMICOLON ; 19 10
IF if 20 2
LPARENT ( 20 5
NUM_INT 2 20 6
GREATER > 20 7
NUM_INT 3 20 8
RPARENT ) 20 9
THEN then 20 10
LBRACE { 20 14
ID y 21 7
ASSIGN := 21 8
ID a 21 10
PLUS + 21 11
NUM_INT 3 21 12
SEMICOLON ; 21 13
RBRACE } 22 2
ELSE else 22 3
LBRACE { 22 7
IF if 23 8
LPARENT ( 23 10
NUM_INT 4 23 11
GREATER > 23 13
NUM_INT 2 23 15
RPARENT ) 23 16
THEN then 23 18
LBRACE { 23 22
ID b 24 11
ASSIGN := 24 12
NUM_FLOAT 3.2 24 14
SEMICOLON ; 24 17
RBRACE } 25 10
ELSE else 25 11
LBRACE { 25 15
ID b 26 12
ASSIGN := 26 13
NUM_FLOAT 5.0 26 15
SEMICOLON ; 26 18
RBRACE } 27 9
FI fi 27 10
ID y 28 6
ASSIGN := 28 7
ID y 28 9
PLUS + 28 10
NUM_INT 1 28 11
SEMICOLON ; 28 12
RBRACE } 29 2
FI fi 29 3
DO do 30 2
LBRACE { 30 4
ID y 31 5
ASSIGN := 31 6
LPARENT ( 31 8
ID y 31 9
PLUS + 31 10
NUM_INT 1 31 11
RPARENT ) 31 12
MULTI * 31 13
NUM_INT 2 31 14
PLUS + 31 15
NUM_INT 1 31 16
SEMICOLON ; 31 17
IF if 32 5
LPARENT ( 32 7
ID a 32 8
EQUAL = 32 9
ID b 32 10
RPARENT ) 32 11
THEN then 32 13
LBRACE { 32 17
ID a 33 9
ASSIGN := 33 10
ID a 33 12
PLUS + 33 13
NUM_INT 1 33 14
SEMICOLON ; 33 15
RBRACE } 34 5
ELSE else 34 6
LBRACE { 34 10
ID b 35 9
ASSIGN := 35 10
ID b 35 12
PLUS + 35 13
NUM_INT 1 35 14
SEMICOLON ; 35 15
RBRACE } 36 5
FI fi 36 6
RBRACE } 37 2
UNTIL until 37 3
LPARENT ( 37 8
ID y 37 9
EQUAL = 37 10
NUM_INT 5 37 11
RPARENT ) 37 12
SEMICOLON ; 37 13
WHILE while 39 2
LPARENT ( 39 8
ID y 39 9
EQUAL = 39 10
NUM_INT 0 39 11
RPARENT ) 39 12
LBRACE { 39 13
WRITE write 40 5
ID x 40 11
SEMICOLON ; 40 12
DO do 41 5
LBRACE { 41 7
WRITE write 42 8
ID mas 42 14
PLUS + 42 17
NUM_INT 5 42 18
MULTI * 42 19
NUM_INT 2 42 20
SEMICOLON ; 42 21
IF if 43 9
LPARENT ( 43 11
NUM_INT 6 43 12
DIFFERENT != 43 13
ID a 43 15
RPARENT ) 43 16
THEN then 43 18
LBRACE { 43 22
ID a 44 13
ASSIGN := 44 14
NUM_INT 5 44 16
SEMICOLON ; 44 17
READ read 45 13
ID x 45 18
SEMICOLON ; 45 19
RBRACE } 46 9
FI fi 46 10
RBRACE } 47 5
UNTIL until 47 6
LPARENT ( 47 11
ID y 47 12
EQUAL = 47 13
NUM_INT 5 47 14
RPARENT ) 47 15
SEMICOLON ; 47 16
RBRACE } 48 2
RBRACE } 49 1
EOF  49 2
