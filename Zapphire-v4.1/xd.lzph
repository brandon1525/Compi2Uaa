PROGRAM program 1 1
LBRACE { 1 8
INT int 2 2
ID x 2 6
COMMA , 2 7
ID y 2 8
COMMA , 2 9
ID z 2 10
SEMICOLON ; 2 11
FLOAT float 3 2
ID a 3 8
COMMA , 3 9
ID b 3 11
COMMA , 3 12
ID c 3 14
SEMICOLON ; 3 15
ID x 4 2
ASSIGN := 4 3
NUM_INT 23 4 5
SEMICOLON ; 4 7
ID y 5 2
ASSIGN := 5 3
NUM_INT 2 5 5
PLUS + 5 6
NUM_INT 3 5 7
MINUS - 5 8
NUM_INT 1 5 9
SEMICOLON ; 5 10
ID z 6 2
ASSIGN := 6 3
ID y 6 5
PLUS + 6 6
NUM_INT 7 6 7
SEMICOLON ; 6 8
ID x 7 2
ASSIGN := 7 3
LPARENT ( 7 5
NUM_INT 5 7 6
MINUS - 7 7
NUM_INT 3 7 8
RPARENT ) 7 9
MULTI * 7 10
LPARENT ( 7 11
NUM_INT 8 7 12
DIV / 7 13
NUM_INT 2 7 14
RPARENT ) 7 15
SEMICOLON ; 7 16
ID y 8 2
ASSIGN := 8 3
NUM_INT 5 8 5
PLUS + 8 6
NUM_INT 3 8 7
MINUS - 8 8
NUM_INT 2 8 9
MULTI * 8 10
NUM_INT 4 8 11
DIV / 8 12
NUM_INT 7 8 13
MINUS - 8 14
NUM_INT 9 8 15
SEMICOLON ; 8 16
ID z 9 2
ASSIGN := 9 3
NUM_INT 8 9 5
DIV / 9 6
NUM_INT 2 9 7
PLUS + 9 8
NUM_INT 15 9 9
MULTI * 9 11
NUM_INT 4 9 12
SEMICOLON ; 9 13
ID y 10 2
ASSIGN := 10 3
NUM_FLOAT 14.54 10 5
SEMICOLON ; 10 10
ID a 11 2
ASSIGN := 11 3
NUM_FLOAT 24.0 11 5
PLUS + 11 9
NUM_INT 4 11 10
MINUS - 11 11
NUM_INT 1 11 12
MULTI * 11 13
NUM_INT 3 11 14
DIV / 11 15
NUM_INT 2 11 16
PLUS + 11 17
NUM_INT 34 11 18
MINUS - 11 20
NUM_INT 1 11 21
SEMICOLON ; 11 22
ID a 12 2
INC ++ 12 3
SEMICOLON ; 12 5
INC ++ 13 2
ID x 13 4
SEMICOLON ; 13 5
DEC -- 14 2
ID x 14 4
SEMICOLON ; 14 5
ID z 15 2
ASSIGN := 15 3
ID x 15 5
PLUS + 15 7
ID y 15 9
SEMICOLON ; 15 10
IF if 16 2
LPARENT ( 16 5
NUM_INT 2 16 6
GREATER > 16 7
NUM_INT 3 16 8
RPARENT ) 16 9
THEN then 16 10
LBRACE { 16 14
ID y 17 7
ASSIGN := 17 8
ID a 17 10
PLUS + 17 11
NUM_INT 3 17 12
SEMICOLON ; 17 13
RBRACE } 18 2
ELSE else 18 3
LBRACE { 18 7
IF if 19 8
LPARENT ( 19 10
NUM_INT 4 19 11
GREATER > 19 13
NUM_INT 2 19 15
RPARENT ) 19 16
THEN then 19 18
LBRACE { 19 22
ID b 20 11
ASSIGN := 20 12
NUM_FLOAT 3.2 20 14
SEMICOLON ; 20 17
RBRACE } 21 10
ELSE else 21 11
LBRACE { 21 15
ID b 22 12
ASSIGN := 22 13
NUM_FLOAT 5.0 22 15
SEMICOLON ; 22 18
RBRACE } 23 9
FI fi 23 10
ID y 24 6
ASSIGN := 24 7
ID y 24 9
PLUS + 24 10
NUM_INT 1 24 11
SEMICOLON ; 24 12
RBRACE } 25 2
FI fi 25 3
DO do 26 2
LBRACE { 26 4
ID y 27 5
ASSIGN := 27 6
LPARENT ( 27 8
ID y 27 9
PLUS + 27 10
NUM_INT 1 27 11
RPARENT ) 27 12
MULTI * 27 13
NUM_INT 2 27 14
PLUS + 27 15
NUM_INT 1 27 16
SEMICOLON ; 27 17
IF if 28 5
LPARENT ( 28 7
ID a 28 8
EQUAL = 28 9
ID b 28 10
RPARENT ) 28 11
THEN then 28 13
LBRACE { 28 17
ID a 29 9
ASSIGN := 29 10
ID a 29 12
PLUS + 29 13
NUM_INT 1 29 14
SEMICOLON ; 29 15
RBRACE } 30 5
ELSE else 30 6
LBRACE { 30 10
ID b 31 9
ASSIGN := 31 10
ID b 31 12
PLUS + 31 13
NUM_INT 1 31 14
SEMICOLON ; 31 15
RBRACE } 32 5
FI fi 32 6
RBRACE } 33 2
UNTIL until 33 3
LPARENT ( 33 8
ID y 33 9
EQUAL = 33 10
NUM_INT 5 33 11
RPARENT ) 33 12
SEMICOLON ; 33 13
WHILE while 35 2
LPARENT ( 35 8
ID y 35 9
EQUAL = 35 10
NUM_INT 0 35 11
RPARENT ) 35 12
LBRACE { 35 13
WRITE write 36 5
ID x 36 11
SEMICOLON ; 36 12
DO do 37 5
LBRACE { 37 7
WRITE write 38 8
ID mas 38 14
PLUS + 38 17
NUM_INT 5 38 18
MULTI * 38 19
NUM_INT 2 38 20
SEMICOLON ; 38 21
IF if 39 9
LPARENT ( 39 11
NUM_INT 6 39 12
DIFFERENT != 39 13
ID a 39 15
RPARENT ) 39 16
THEN then 39 18
LBRACE { 39 22
ID a 40 13
ASSIGN := 40 14
NUM_INT 5 40 16
SEMICOLON ; 40 17
READ read 41 13
ID x 41 18
SEMICOLON ; 41 19
RBRACE } 42 9
FI fi 42 10
RBRACE } 43 5
UNTIL until 43 6
LPARENT ( 43 11
ID y 43 12
EQUAL = 43 13
NUM_INT 5 43 14
RPARENT ) 43 15
SEMICOLON ; 43 16
RBRACE } 44 2
RBRACE } 45 1
EOF  45 2
