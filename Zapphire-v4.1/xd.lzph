PROGRAM program 1 1
LBRACE { 1 8
INT int 2 2
ID x 2 6
COMMA , 2 7
ID y 2 8
COMMA , 2 9
ID z 2 10
SEMICOLON ; 2 11
FLOAT float 3 2
ID a 3 8
COMMA , 3 9
ID b 3 11
COMMA , 3 12
ID c 3 14
SEMICOLON ; 3 15
INT int 4 2
ID w 4 6
SEMICOLON ; 4 7
BOOL bool 5 2
ID xx 5 7
SEMICOLON ; 5 9
ID x 6 2
ASSIGN := 6 3
NUM_INT 23 6 5
SEMICOLON ; 6 7
ID y 7 2
ASSIGN := 7 3
NUM_INT 2 7 5
PLUS + 7 6
NUM_INT 3 7 7
MINUS - 7 8
NUM_INT 1 7 9
SEMICOLON ; 7 10
ID z 8 2
ASSIGN := 8 3
ID y 8 5
PLUS + 8 6
NUM_INT 7 8 7
SEMICOLON ; 8 8
ID x 9 2
ASSIGN := 9 3
LPARENT ( 9 5
NUM_INT 5 9 6
MINUS - 9 7
NUM_INT 3 9 8
RPARENT ) 9 9
MULTI * 9 10
LPARENT ( 9 11
NUM_INT 8 9 12
DIV / 9 13
NUM_INT 2 9 14
RPARENT ) 9 15
SEMICOLON ; 9 16
ID y 10 2
ASSIGN := 10 3
NUM_INT 5 10 5
PLUS + 10 6
NUM_INT 3 10 7
MINUS - 10 8
NUM_INT 2 10 9
MULTI * 10 10
NUM_INT 4 10 11
DIV / 10 12
NUM_INT 7 10 13
MINUS - 10 14
NUM_INT 9 10 15
SEMICOLON ; 10 16
ID z 11 2
ASSIGN := 11 3
NUM_INT 8 11 5
DIV / 11 6
NUM_INT 2 11 7
PLUS + 11 8
NUM_INT 15 11 9
MULTI * 11 11
NUM_INT 4 11 12
SEMICOLON ; 11 13
ID y 12 2
ASSIGN := 12 3
NUM_FLOAT 14.54 12 5
SEMICOLON ; 12 10
ID a 13 2
ASSIGN := 13 3
NUM_FLOAT 24.0 13 5
PLUS + 13 9
NUM_INT 4 13 10
MINUS - 13 11
NUM_INT 1 13 12
MULTI * 13 13
NUM_INT 3 13 14
DIV / 13 15
NUM_INT 2 13 16
PLUS + 13 17
NUM_INT 34 13 18
MINUS - 13 20
NUM_INT 1 13 21
SEMICOLON ; 13 22
ID a 14 2
INC ++ 14 3
SEMICOLON ; 14 5
INC ++ 15 2
ID x 15 4
SEMICOLON ; 15 5
DEC -- 16 2
ID x 16 4
SEMICOLON ; 16 5
ID z 17 2
ASSIGN := 17 3
ID x 17 5
PLUS + 17 7
ID y 17 9
SEMICOLON ; 17 10
IF if 18 2
LPARENT ( 18 5
NUM_INT 2 18 6
GREATER > 18 7
NUM_INT 3 18 8
RPARENT ) 18 9
THEN then 18 10
LBRACE { 18 14
ID y 19 7
ASSIGN := 19 8
ID a 19 10
PLUS + 19 11
NUM_INT 3 19 12
SEMICOLON ; 19 13
RBRACE } 20 2
ELSE else 20 3
LBRACE { 20 7
IF if 21 8
LPARENT ( 21 10
NUM_INT 4 21 11
GREATER > 21 13
NUM_INT 2 21 15
RPARENT ) 21 16
THEN then 21 18
LBRACE { 21 22
ID b 22 11
ASSIGN := 22 12
NUM_FLOAT 3.2 22 14
SEMICOLON ; 22 17
RBRACE } 23 10
ELSE else 23 11
LBRACE { 23 15
ID b 24 12
ASSIGN := 24 13
NUM_FLOAT 5.0 24 15
SEMICOLON ; 24 18
RBRACE } 25 9
FI fi 25 10
ID y 26 6
ASSIGN := 26 7
ID y 26 9
PLUS + 26 10
NUM_INT 1 26 11
SEMICOLON ; 26 12
RBRACE } 27 2
FI fi 27 3
DO do 28 2
LBRACE { 28 4
ID y 29 5
ASSIGN := 29 6
LPARENT ( 29 8
ID y 29 9
PLUS + 29 10
NUM_INT 1 29 11
RPARENT ) 29 12
MULTI * 29 13
NUM_INT 2 29 14
PLUS + 29 15
NUM_INT 1 29 16
SEMICOLON ; 29 17
IF if 30 5
LPARENT ( 30 7
ID a 30 8
EQUAL = 30 9
ID b 30 10
RPARENT ) 30 11
THEN then 30 13
LBRACE { 30 17
ID a 31 9
ASSIGN := 31 10
ID a 31 12
PLUS + 31 13
NUM_INT 1 31 14
SEMICOLON ; 31 15
RBRACE } 32 5
ELSE else 32 6
LBRACE { 32 10
ID b 33 9
ASSIGN := 33 10
ID b 33 12
PLUS + 33 13
NUM_INT 1 33 14
SEMICOLON ; 33 15
RBRACE } 34 5
FI fi 34 6
RBRACE } 35 2
UNTIL until 35 3
LPARENT ( 35 8
ID y 35 9
EQUAL = 35 10
NUM_INT 5 35 11
RPARENT ) 35 12
SEMICOLON ; 35 13
WHILE while 37 2
LPARENT ( 37 8
ID y 37 9
EQUAL = 37 10
NUM_INT 0 37 11
RPARENT ) 37 12
LBRACE { 37 13
WRITE write 38 5
ID x 38 11
SEMICOLON ; 38 12
DO do 39 5
LBRACE { 39 7
WRITE write 40 8
ID mas 40 14
PLUS + 40 17
NUM_INT 5 40 18
MULTI * 40 19
NUM_INT 2 40 20
SEMICOLON ; 40 21
IF if 41 9
LPARENT ( 41 11
NUM_INT 6 41 12
DIFFERENT != 41 13
ID a 41 15
RPARENT ) 41 16
THEN then 41 18
LBRACE { 41 22
ID a 42 13
ASSIGN := 42 14
NUM_INT 5 42 16
SEMICOLON ; 42 17
READ read 43 13
ID x 43 18
SEMICOLON ; 43 19
RBRACE } 44 9
FI fi 44 10
RBRACE } 45 5
UNTIL until 45 6
LPARENT ( 45 11
ID y 45 12
EQUAL = 45 13
NUM_INT 5 45 14
RPARENT ) 45 15
SEMICOLON ; 45 16
RBRACE } 46 2
RBRACE } 47 1
EOF  47 2
