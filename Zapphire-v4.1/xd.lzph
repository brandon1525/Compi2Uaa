PROGRAM program 1 1
LBRACE { 1 8
INT int 2 2
ID x 2 6
COMMA , 2 7
ID y 2 8
COMMA , 2 9
ID z 2 10
SEMICOLON ; 2 11
FLOAT float 3 2
ID a 3 8
COMMA , 3 9
ID b 3 11
COMMA , 3 12
ID c 3 14
SEMICOLON ; 3 15
ID x 4 2
ASSIGN := 4 3
NUM_INT 23 4 5
SEMICOLON ; 4 7
ID y 5 2
ASSIGN := 5 3
NUM_INT 2 5 5
PLUS + 5 6
NUM_INT 3 5 7
MINUS - 5 8
NUM_INT 1 5 9
SEMICOLON ; 5 10
ID z 6 2
ASSIGN := 6 3
ID y 6 5
PLUS + 6 6
NUM_INT 7 6 7
SEMICOLON ; 6 8
ID x 7 2
ASSIGN := 7 3
LPARENT ( 7 5
NUM_INT 5 7 6
MINUS - 7 7
NUM_INT 3 7 8
RPARENT ) 7 9
MULTI * 7 10
LPARENT ( 7 11
NUM_INT 8 7 12
DIV / 7 13
NUM_INT 2 7 14
RPARENT ) 7 15
SEMICOLON ; 7 16
ID y 8 2
ASSIGN := 8 3
NUM_INT 5 8 5
PLUS + 8 6
NUM_INT 3 8 7
MINUS - 8 8
NUM_INT 2 8 9
MULTI * 8 10
NUM_INT 4 8 11
DIV / 8 12
NUM_INT 7 8 13
MINUS - 8 14
NUM_INT 9 8 15
SEMICOLON ; 8 16
ID z 9 2
ASSIGN := 9 3
NUM_INT 8 9 5
DIV / 9 6
NUM_INT 2 9 7
PLUS + 9 8
NUM_INT 15 9 9
MULTI * 9 11
NUM_INT 4 9 12
SEMICOLON ; 9 13
ID y 10 2
ASSIGN := 10 3
NUM_FLOAT 14.54 10 5
SEMICOLON ; 10 10
ID a 11 2
ASSIGN := 11 3
NUM_FLOAT 24.0 11 5
PLUS + 11 9
NUM_INT 4 11 10
MINUS - 11 11
NUM_INT 1 11 12
MULTI * 11 13
NUM_INT 3 11 14
DIV / 11 15
NUM_INT 2 11 16
PLUS + 11 17
NUM_INT 34 11 18
MINUS - 11 20
NUM_INT 1 11 21
SEMICOLON ; 11 22
ID a 12 2
INC ++ 12 3
SEMICOLON ; 12 5
INC ++ 13 2
ID x 13 4
SEMICOLON ; 13 5
ID z 14 2
ASSIGN := 14 3
ID x 14 5
PLUS + 14 7
ID y 14 9
SEMICOLON ; 14 10
IF if 15 2
LPARENT ( 15 5
NUM_INT 2 15 6
GREATER > 15 7
NUM_INT 3 15 8
RPARENT ) 15 9
THEN then 15 10
LBRACE { 15 14
ID y 16 7
ASSIGN := 16 8
ID a 16 10
PLUS + 16 11
NUM_INT 3 16 12
SEMICOLON ; 16 13
RBRACE } 17 2
ELSE else 17 3
LBRACE { 17 7
IF if 18 8
LPARENT ( 18 10
NUM_INT 4 18 11
GREATER > 18 13
NUM_INT 2 18 15
RPARENT ) 18 16
THEN then 18 18
LBRACE { 18 22
ID b 19 11
ASSIGN := 19 12
NUM_FLOAT 3.2 19 14
SEMICOLON ; 19 17
RBRACE } 20 10
ELSE else 20 11
LBRACE { 20 15
ID b 21 12
ASSIGN := 21 13
NUM_FLOAT 5.0 21 15
SEMICOLON ; 21 18
RBRACE } 22 9
FI fi 22 10
ID y 23 6
ASSIGN := 23 7
ID y 23 9
PLUS + 23 10
NUM_INT 1 23 11
SEMICOLON ; 23 12
RBRACE } 24 2
FI fi 24 3
DO do 25 2
LBRACE { 25 4
ID y 26 5
ASSIGN := 26 6
LPARENT ( 26 8
ID y 26 9
PLUS + 26 10
NUM_INT 1 26 11
RPARENT ) 26 12
MULTI * 26 13
NUM_INT 2 26 14
PLUS + 26 15
NUM_INT 1 26 16
SEMICOLON ; 26 17
IF if 27 5
LPARENT ( 27 7
ID a 27 8
EQUAL = 27 9
ID b 27 10
RPARENT ) 27 11
THEN then 27 13
LBRACE { 27 17
ID a 28 9
ASSIGN := 28 10
ID a 28 12
PLUS + 28 13
NUM_INT 1 28 14
SEMICOLON ; 28 15
RBRACE } 29 5
ELSE else 29 6
LBRACE { 29 10
ID b 30 9
ASSIGN := 30 10
ID b 30 12
PLUS + 30 13
NUM_INT 1 30 14
SEMICOLON ; 30 15
RBRACE } 31 5
FI fi 31 6
RBRACE } 32 2
UNTIL until 32 3
LPARENT ( 32 8
ID y 32 9
EQUAL = 32 10
NUM_INT 5 32 11
RPARENT ) 32 12
SEMICOLON ; 32 13
WHILE while 34 2
LPARENT ( 34 8
ID y 34 9
EQUAL = 34 10
NUM_INT 0 34 11
RPARENT ) 34 12
LBRACE { 34 13
WRITE write 35 5
ID x 35 11
SEMICOLON ; 35 12
DO do 36 5
LBRACE { 36 7
WRITE write 37 8
ID mas 37 14
PLUS + 37 17
NUM_INT 5 37 18
MULTI * 37 19
NUM_INT 2 37 20
SEMICOLON ; 37 21
IF if 38 9
LPARENT ( 38 11
NUM_INT 6 38 12
DIFFERENT != 38 13
ID a 38 15
RPARENT ) 38 16
THEN then 38 18
LBRACE { 38 22
ID a 39 13
ASSIGN := 39 14
NUM_INT 5 39 16
SEMICOLON ; 39 17
READ read 40 13
ID x 40 18
SEMICOLON ; 40 19
RBRACE } 41 9
FI fi 41 10
RBRACE } 42 5
UNTIL until 42 6
LPARENT ( 42 11
ID y 42 12
EQUAL = 42 13
NUM_INT 5 42 14
RPARENT ) 42 15
SEMICOLON ; 42 16
RBRACE } 43 2
RBRACE } 44 1
EOF  44 2
