PROGRAM program 1 1
LBRACE { 1 9
INT int 2 2
ID x 2 6
COMMA , 2 7
ID y 2 9
SEMICOLON ; 2 10
FLOAT float 3 2
ID x1 3 8
COMMA , 3 10
ID y1 3 12
SEMICOLON ; 3 14
BOOL bool 4 2
ID x2 4 7
COMMA , 4 9
ID y2 4 11
SEMICOLON ; 4 13
IF if 6 2
LPARENT ( 6 4
LPARENT ( 6 6
ID x 6 8
PLUS + 6 10
NUM_INT 20 6 12
RPARENT ) 6 15
MULTI * 6 17
NUM_INT 4 6 19
PLUS + 6 21
LPARENT ( 6 23
ID y 6 25
MULTI * 6 27
NUM_INT 3 6 29
RPARENT ) 6 31
DIV / 6 33
LPARENT ( 6 35
ID x1 6 37
PLUS + 6 40
ID y2 6 42
RPARENT ) 6 45
RPARENT ) 6 47
LBRACE { 6 49
ID x 7 3
ASSIGN := 7 5
ID y 7 8
MULTI * 7 10
NUM_INT 23 7 11
SEMICOLON ; 7 13
RBRACE } 8 2
ELSE else 8 4
LBRACE { 8 9
IF if 9 3
LPARENT ( 9 5
ID x2 9 7
EQUAL = 9 10
NUM_INT 1 9 12
RPARENT ) 9 14
LBRACE { 9 16
ID y 10 4
ASSIGN := 10 6
ID x 10 9
PLUS + 10 11
NUM_INT 21 10 12
SEMICOLON ; 10 14
RBRACE } 11 3
ELSE else 11 5
LBRACE { 11 10
ID y 12 4
ASSIGN := 12 6
ID x 12 9
PLUS + 12 11
NUM_INT 20 12 12
SEMICOLON ; 12 14
RBRACE } 13 3
FI fi 13 5
RBRACE } 14 2
WHILE while 16 2
LPARENT ( 16 7
ID x1 16 9
MULTI * 16 12
ID x 16 14
PLUS + 16 16
ID x2 16 18
MULTI * 16 21
LPARENT ( 16 23
ID y1 16 25
MINUS - 16 28
ID y2 16 30
RPARENT ) 16 33
GREATER > 16 35
NUM_INT 0 16 37
RPARENT ) 16 39
LBRACE { 16 41
ID y2 17 3
ASSIGN := 17 6
NUM_INT 1 17 9
SEMICOLON ; 17 10
DO do 18 3
LBRACE { 18 6
ID x1 19 4
ASSIGN := 19 7
ID x1 19 10
PLUS + 19 13
NUM_INT 1 19 14
SEMICOLON ; 19 15
READ read 20 4
ID x1 20 9
SEMICOLON ; 20 11
RBRACE } 21 3
RBRACE } 22 2
RBRACE } 23 1
EOF  23 2
